{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/MenuItem/MenuItem.js","webpack:///./node_modules/@material-ui/core/esm/MenuList/MenuList.js","webpack:///./src/components/subnavbar.jsx","webpack:///./src/pages/emblemsandmotifs.jsx"],"names":["props","ref","tabIndex","classes","className","_props$component","component","_props$disableGutters","disableGutters","ListItemClasses","_props$role","role","selected","tabIndexProp","other","disabled","undefined","ListItem","button","dense","root","gutters","withStyles","theme","typography","body1","minHeight","paddingTop","paddingBottom","boxSizing","width","overflow","whiteSpace","breakpoints","up","body2","name","nextItem","list","item","disableListWrap","firstChild","nextElementSibling","previousItem","lastChild","previousElementSibling","textCriteriaMatches","nextFocus","textCriteria","text","innerText","textContent","trim","toLowerCase","length","repeating","keys","indexOf","join","moveFocus","currentFocus","disabledItemsFocusable","traversalFunction","wrappedOnce","nextFocusDisabled","getAttribute","hasAttribute","focus","useEnhancedEffect","window","actions","_props$autoFocus","autoFocus","_props$autoFocusItem","autoFocusItem","children","_props$disabledItemsF","_props$disableListWra","onKeyDown","_props$variant","variant","listRef","textCriteriaRef","previousKeyMatched","lastTime","current","adjustStyleForScrollbar","containerElement","noExplicitWidth","style","clientHeight","scrollbarSize","concat","getScrollbarSize","direction","handleOwnRef","instance","handleRef","useForkRef","activeItemIndex","forEach","child","index","items","map","newChildProps","List","event","key","ownerDocument","activeElement","preventDefault","criteria","lowerKey","currTime","performance","now","push","keepFocusOnCurrent","useStyles","makeStyles","flexContainer","justifyContent","display","flexDirection","padding","backgroundColor","flexWrap","color","borderWidth","borderStyle","borderTopStyle","borderLeftStyle","borderRightStyle","SubNavBar","subMenuItems","onSubMenuItemClick","React","useState","currentKey","setCurrentKey","onClick","linkText","flexContainera","image","contentContainer","EmblemsAndMotifs","query","useStaticQuery","currentSubMenu","setSubMenuKey","subMenuKey","title","allImageSharp","edges","edge","node","fluid","originalName","includes"],"mappings":"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","file":"component---src-pages-emblemsandmotifs-jsx-c79337e4b740a9adb894.js","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListItem from '../ListItem';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body1, _defineProperty({\n      minHeight: 48,\n      paddingTop: 6,\n      paddingBottom: 6,\n      boxSizing: 'border-box',\n      width: 'auto',\n      overflow: 'hidden',\n      whiteSpace: 'nowrap'\n    }, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    })),\n    // TODO v5: remove\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: {},\n\n    /* Styles applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the root element if dense. */\n    dense: _extends({}, theme.typography.body2, {\n      minHeight: 'auto'\n    })\n  };\n};\nvar MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      ListItemClasses = props.ListItemClasses,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'menuitem' : _props$role,\n      selected = props.selected,\n      tabIndexProp = props.tabIndex,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"ListItemClasses\", \"role\", \"selected\", \"tabIndex\"]);\n\n  var tabIndex;\n\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    button: true,\n    role: role,\n    tabIndex: tabIndex,\n    component: component,\n    selected: selected,\n    disableGutters: disableGutters,\n    classes: _extends({\n      dense: classes.dense\n    }, ListItemClasses),\n    className: clsx(classes.root, className, selected && classes.selected, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiMenuItem'\n})(MenuItem);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport * as ReactDOM from 'react-dom';\nimport ownerDocument from '../utils/ownerDocument';\nimport List from '../List';\nimport getScrollbarSize from '../utils/getScrollbarSize';\nimport useForkRef from '../utils/useForkRef';\n\nfunction nextItem(list, item, disableListWrap) {\n  if (list === item) {\n    return list.firstChild;\n  }\n\n  if (item && item.nextElementSibling) {\n    return item.nextElementSibling;\n  }\n\n  return disableListWrap ? null : list.firstChild;\n}\n\nfunction previousItem(list, item, disableListWrap) {\n  if (list === item) {\n    return disableListWrap ? list.firstChild : list.lastChild;\n  }\n\n  if (item && item.previousElementSibling) {\n    return item.previousElementSibling;\n  }\n\n  return disableListWrap ? null : list.lastChild;\n}\n\nfunction textCriteriaMatches(nextFocus, textCriteria) {\n  if (textCriteria === undefined) {\n    return true;\n  }\n\n  var text = nextFocus.innerText;\n\n  if (text === undefined) {\n    // jsdom doesn't support innerText\n    text = nextFocus.textContent;\n  }\n\n  text = text.trim().toLowerCase();\n\n  if (text.length === 0) {\n    return false;\n  }\n\n  if (textCriteria.repeating) {\n    return text[0] === textCriteria.keys[0];\n  }\n\n  return text.indexOf(textCriteria.keys.join('')) === 0;\n}\n\nfunction moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, traversalFunction, textCriteria) {\n  var wrappedOnce = false;\n  var nextFocus = traversalFunction(list, currentFocus, currentFocus ? disableListWrap : false);\n\n  while (nextFocus) {\n    // Prevent infinite loop.\n    if (nextFocus === list.firstChild) {\n      if (wrappedOnce) {\n        return;\n      }\n\n      wrappedOnce = true;\n    } // Same logic as useAutocomplete.js\n\n\n    var nextFocusDisabled = disabledItemsFocusable ? false : nextFocus.disabled || nextFocus.getAttribute('aria-disabled') === 'true';\n\n    if (!nextFocus.hasAttribute('tabindex') || !textCriteriaMatches(nextFocus, textCriteria) || nextFocusDisabled) {\n      // Move to the next element.\n      nextFocus = traversalFunction(list, nextFocus, disableListWrap);\n    } else {\n      nextFocus.focus();\n      return;\n    }\n  }\n}\n\nvar useEnhancedEffect = typeof window === 'undefined' ? React.useEffect : React.useLayoutEffect;\n/**\n * A permanently displayed menu following https://www.w3.org/TR/wai-aria-practices/#menubutton.\n * It's exposed to help customization of the [`Menu`](/api/menu/) component. If you\n * use it separately you need to move focus into the component manually. Once\n * the focus is placed inside the component it is fully keyboard accessible.\n */\n\nvar MenuList = /*#__PURE__*/React.forwardRef(function MenuList(props, ref) {\n  var actions = props.actions,\n      _props$autoFocus = props.autoFocus,\n      autoFocus = _props$autoFocus === void 0 ? false : _props$autoFocus,\n      _props$autoFocusItem = props.autoFocusItem,\n      autoFocusItem = _props$autoFocusItem === void 0 ? false : _props$autoFocusItem,\n      children = props.children,\n      className = props.className,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      onKeyDown = props.onKeyDown,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'selectedMenu' : _props$variant,\n      other = _objectWithoutProperties(props, [\"actions\", \"autoFocus\", \"autoFocusItem\", \"children\", \"className\", \"disabledItemsFocusable\", \"disableListWrap\", \"onKeyDown\", \"variant\"]);\n\n  var listRef = React.useRef(null);\n  var textCriteriaRef = React.useRef({\n    keys: [],\n    repeating: true,\n    previousKeyMatched: true,\n    lastTime: null\n  });\n  useEnhancedEffect(function () {\n    if (autoFocus) {\n      listRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useImperativeHandle(actions, function () {\n    return {\n      adjustStyleForScrollbar: function adjustStyleForScrollbar(containerElement, theme) {\n        // Let's ignore that piece of logic if users are already overriding the width\n        // of the menu.\n        var noExplicitWidth = !listRef.current.style.width;\n\n        if (containerElement.clientHeight < listRef.current.clientHeight && noExplicitWidth) {\n          var scrollbarSize = \"\".concat(getScrollbarSize(true), \"px\");\n          listRef.current.style[theme.direction === 'rtl' ? 'paddingLeft' : 'paddingRight'] = scrollbarSize;\n          listRef.current.style.width = \"calc(100% + \".concat(scrollbarSize, \")\");\n        }\n\n        return listRef.current;\n      }\n    };\n  }, []);\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var list = listRef.current;\n    var key = event.key;\n    /**\n     * @type {Element} - will always be defined since we are in a keydown handler\n     * attached to an element. A keydown event is either dispatched to the activeElement\n     * or document.body or document.documentElement. Only the first case will\n     * trigger this specific handler.\n     */\n\n    var currentFocus = ownerDocument(list).activeElement;\n\n    if (key === 'ArrowDown') {\n      // Prevent scroll of the page\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'ArrowUp') {\n      event.preventDefault();\n      moveFocus(list, currentFocus, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key === 'Home') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, nextItem);\n    } else if (key === 'End') {\n      event.preventDefault();\n      moveFocus(list, null, disableListWrap, disabledItemsFocusable, previousItem);\n    } else if (key.length === 1) {\n      var criteria = textCriteriaRef.current;\n      var lowerKey = key.toLowerCase();\n      var currTime = performance.now();\n\n      if (criteria.keys.length > 0) {\n        // Reset\n        if (currTime - criteria.lastTime > 500) {\n          criteria.keys = [];\n          criteria.repeating = true;\n          criteria.previousKeyMatched = true;\n        } else if (criteria.repeating && lowerKey !== criteria.keys[0]) {\n          criteria.repeating = false;\n        }\n      }\n\n      criteria.lastTime = currTime;\n      criteria.keys.push(lowerKey);\n      var keepFocusOnCurrent = currentFocus && !criteria.repeating && textCriteriaMatches(currentFocus, criteria);\n\n      if (criteria.previousKeyMatched && (keepFocusOnCurrent || moveFocus(list, currentFocus, false, disabledItemsFocusable, nextItem, criteria))) {\n        event.preventDefault();\n      } else {\n        criteria.previousKeyMatched = false;\n      }\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    listRef.current = ReactDOM.findDOMNode(instance);\n  }, []);\n  var handleRef = useForkRef(handleOwnRef, ref);\n  /**\n   * the index of the item should receive focus\n   * in a `variant=\"selectedMenu\"` it's the first `selected` item\n   * otherwise it's the very first item.\n   */\n\n  var activeItemIndex = -1; // since we inject focus related props into children we have to do a lookahead\n  // to check if there is a `selected` item. We're looking for the last `selected`\n  // item and use the first valid item as a fallback\n\n  React.Children.forEach(children, function (child, index) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Menu component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    if (!child.props.disabled) {\n      if (variant === 'selectedMenu' && child.props.selected) {\n        activeItemIndex = index;\n      } else if (activeItemIndex === -1) {\n        activeItemIndex = index;\n      }\n    }\n  });\n  var items = React.Children.map(children, function (child, index) {\n    if (index === activeItemIndex) {\n      var newChildProps = {};\n\n      if (autoFocusItem) {\n        newChildProps.autoFocus = true;\n      }\n\n      if (child.props.tabIndex === undefined && variant === 'selectedMenu') {\n        newChildProps.tabIndex = 0;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, newChildProps);\n    }\n\n    return child;\n  });\n  return /*#__PURE__*/React.createElement(List, _extends({\n    role: \"menu\",\n    ref: handleRef,\n    className: className,\n    onKeyDown: handleKeyDown,\n    tabIndex: autoFocus ? 0 : -1\n  }, other), items);\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default MenuList;","import { MenuItem, MenuList } from \"@material-ui/core\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst useStyles = makeStyles(() => ({\n  flexContainer: {\n    justifyContent: \"center\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    padding: 0,\n    backgroundColor: \"lightGray\",\n    flexWrap: \"wrap\",\n    color: \"black\",\n    borderWidth: \"thin\",\n    borderStyle: \"solid\",\n    borderTopStyle: \"none\",\n    borderLeftStyle: \"none\",\n    borderRightStyle: \"none\",\n  },\n}))\n\nconst SubNavBar = props => {\n  const classes = useStyles()\n  const { subMenuItems, onSubMenuItemClick } = props\n  const [currentKey, setCurrentKey] = React.useState(subMenuItems[0].key)\n\n  const onClick = key => {\n    setCurrentKey(key)\n    onSubMenuItemClick(key)\n  }\n\n  const items = []\n\n  subMenuItems.forEach(item => {\n    items.push(\n      <MenuItem\n        key={item.key}\n        selected={currentKey === item.key}\n        onClick={() => onClick(item.key)}\n      >\n        {item.linkText}\n      </MenuItem>\n    )\n  })\n\n  return <MenuList className={classes.flexContainer}>{items}</MenuList>\n}\n\nSubNavBar.propTypes = {\n  subMenuItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      linkText: PropTypes.string.isRequired,\n      key: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  onSubMenuItemClick: PropTypes.func.isRequired,\n}\n\nexport default SubNavBar\n","import { graphql, useStaticQuery } from \"gatsby\"\n\nimport Img from \"gatsby-image\"\nimport React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport SubNavBar from \"../components/subnavbar\"\n\nconst useStyles = makeStyles(() => ({\n  flexContainera: {\n    justifyContent: \"center\",\n  },\n  image: {},\n  contentContainer: {\n    paddingTop: \"2em\",\n  },\n}))\n\nconst EmblemsAndMotifs = () => {\n  const classes = useStyles()\n  const query = useStaticQuery(graphql`\n    query {\n      allImageSharp {\n        edges {\n          node {\n            id\n            fluid(maxWidth: 1024) {\n              ...GatsbyImageSharpFluid\n              originalName\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const [currentSubMenu, setSubMenuKey] = React.useState(\"birdsAndWaterfowl\")\n  const subMenuItemsForPage = [\n    {\n      linkText: \"Birds & Waterfowl\",\n      key: \"birdsAndWaterfowl\",\n    },\n    {\n      linkText: \"Animals & Farm\",\n      key: \"animalsAndFarm\",\n    },\n    {\n      linkText: \"Dogs & Cats\",\n      key: \"dogsAndCats\",\n    },\n    {\n      linkText: \"Aquatic & Nautical\",\n      key: \"aquaticAndNautical\",\n    },\n    {\n      linkText: \"Flowers & Fruit\",\n      key: \"flowersAndFruit\",\n    },\n    {\n      linkText: \"Misc.\",\n      key: \"misc\",\n    },\n  ]\n  const onSubMenuItemClick = subMenuKey => {\n    if (currentSubMenu !== subMenuKey) {\n      setSubMenuKey(subMenuKey)\n    }\n  }\n\n  return (\n    <Layout>\n      <SubNavBar\n        onSubMenuItemClick={onSubMenuItemClick}\n        subMenuItems={subMenuItemsForPage}\n      />\n      <SEO title=\"Emblems and Motifs\" />\n      <div className={classes.contentContainer}>\n        <div>\n          {/*\n           * These will be out of order due to the fact that\n           * they are named main_1 to 4 and not sorted.\n           */}\n          {query.allImageSharp.edges.map(edge => {\n            const { originalName } = edge.node.fluid\n            if (originalName.includes(currentSubMenu)) {\n              return (\n                <div>\n                  <Img fluid={edge.node.fluid} />\n                </div>\n              )\n            }\n            return <></>\n          })}\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default EmblemsAndMotifs\n"],"sourceRoot":""}